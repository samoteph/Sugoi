@page "/"
@inject IJSRuntime JSRuntime;
@using BlazorJsFastDataExchanger;

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<div @ref="divPixi">
</div>

@code
{
    ElementReference divPixi;
    static double rotation = 0;
    static byte[] buffer = new byte[256 * 256 * 4];

    private async Task CreatePixi()
    {
        await JSRuntime.InvokeVoidAsync("createPixi", divPixi, 256, 256);
    }

    [JSInvokable]
    public static Task<double> GetRotationAsync()
    {
        rotation += 1.1;
        return Task.FromResult(rotation);
    }

    [JSInvokable]
    public static async Task RenderAsync()
    {

        int index = 0;
        for (int x = 0; x < 256 * 256; x++)
        {
            byte gray = (byte)(x + rotation);

            buffer[index + 0] = gray;
            buffer[index + 1] = gray;
            buffer[index + 2] = gray;
            buffer[index + 3] = 0xFF;

            index += 4;
        }

        JsFastDataExchanger.SetBinaryData("screen", buffer);

        var info = new BJSFDEBinaryInfo("screen");
        await JsFastDataExchanger.GetBinaryData(info);

        var data = info.data;

        //return Task.CompletedTask;
    }

    protected async override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await this.CreatePixi();
        }

        base.OnAfterRender(firstRender);
    }
}
